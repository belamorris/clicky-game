{"version":3,"sources":["components/CharacterCard/CharacterCard.js","components/Wrapper/Wrapper.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/Instructions/Instructions.js","components/ScoreBoard/ScoreBoard.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","onClick","clickCard","className","src","image","alt","name","Wrapper","children","Navbar","message","Footer","Instructions","ScoreBoard","score","topScore","App","state","guessArray","shake","card","_this","id","setState","Math","max","_this2","this","components_Navbar_Navbar","components_Instructions_Instructions","components_ScoreBoard_ScoreBoard","dist","h","v","r","q","dur","int","fixed","fixedStop","freez","components_Wrapper_Wrapper","characters","sort","b","random","map","randomCard","components_CharacterCard_CharacterCard","key","components_Footer_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"g0BASeA,SANO,SAAAC,GAAK,OAC1BC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,UAAUL,IAAQM,UAAU,qDACrDL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAeC,IAAKP,EAAMQ,MAAOC,IAAKT,EAAMU,UCA9CC,SAFC,SAAAX,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAWN,EAAMY,YCM1CC,SANA,SAAAb,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kDACdL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iDAAiDN,EAAMc,YCU1DC,SAPA,SAAAf,GAAK,OAEhBC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gDAAf,qCCFWU,SALM,SAAAhB,GAAK,OAC1BC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6DACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,8BAAd,gBACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,yBAAb,8ECIWW,SANI,SAAAjB,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uCACjBL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,+BAAd,QAAiDL,EAAAC,EAAAC,cAAA,UAAQH,EAAMkB,MAC/DjB,EAAAC,EAAAC,cAAA,WADA,OACSF,EAAAC,EAAAC,cAAA,UAAQH,EAAMmB,aC4EVC,6MArEdC,MAAQ,CACPC,WAAY,GACZR,QAAS,wBACTI,MAAO,EACPC,SAAU,EACVI,MAAO,KAGRlB,UAAY,SAAAmB,GACX,IAAIF,EAAaG,EAAKJ,MAAMC,WACxBJ,EAAQO,EAAKJ,MAAMH,MAEnBI,EAAWE,EAAKE,IACnBD,EAAKE,SAAS,CACbb,QAAS,aACTK,SAAUS,KAAKC,IAAIJ,EAAKJ,MAAMH,MAAOO,EAAKJ,MAAMF,UAChDG,WAAY,GACZJ,MAAO,EACPK,MAAO,OAKRD,EAAWE,EAAKE,KAAM,EACtBD,EAAKE,SAAS,CACbb,QAAS,YACTQ,WAAYA,EACZJ,QAASA,EACTK,MAAO,GACL,WACuB,KAArBE,EAAKJ,MAAMH,OACdO,EAAKE,SAAS,CACbb,QAAS,WACTK,SAAUS,KAAKC,IAAIJ,EAAKJ,MAAMH,MAAOO,EAAKJ,MAAMF,UAChDG,WAAY,GACZJ,MAAO,gFAOH,IAAAY,EAAAC,KACR,OACC9B,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC6B,EAAD,CAAQlB,QAASiB,KAAKV,MAAMP,UAC5Bb,EAAAC,EAAAC,cAAC8B,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAD,CACChB,MAAOa,KAAKV,MAAMH,MAClBC,SAAUY,KAAKV,MAAMF,WAEtBlB,EAAAC,EAAAC,cAACgC,EAAA,MAAD,CAAOC,EAAG,GAAIC,EAAG,GAAIC,EAAG,EAAGC,EAAGR,KAAKV,MAAME,MAAOiB,IAAK,IAAKC,IAAK,IAAKZ,IAAK,GAAIa,OAAO,EAAMC,WAAW,EAAOC,OAAO,GAClH3C,EAAAC,EAAAC,cAAC0C,EAAD,KACEC,EACCC,KAAK,SAAC7C,EAAG8C,GAAJ,MAAU,GAAMpB,KAAKqB,WAC1BC,IAAI,SAAAC,GAAU,OACdlD,EAAAC,EAAAC,cAACiD,EAAD,CACC/C,UAAWyB,EAAKzB,UAChBqB,GAAIyB,EAAWzB,GACf2B,IAAKF,EAAWzB,GAChBlB,MAAO2C,EAAW3C,YAGvBP,EAAAC,EAAAC,cAACmD,EAAD,cAlEcC,aCNlBC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.480467f4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = props => (\n\t<div onClick={() => props.clickCard(props)} className=\"card col-sm-2 p-2 m-4 animated bounceIn hoverable\">\n\t\t<img className=\"card-img-top\" src={props.image} alt={props.name} />\n\t</div>\n);\n\nexport default CharacterCard;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n\t<nav className=\"navbar fixed-top navbar-dark navbar-custom p-3\">\n\t\t<span className=\"navbar-text text-white bold animated bounceIn\">{props.message}</span>\n\t</nav>\n);\n\nexport default Navbar;","import React from \"react\";\nimport \"./Footer.css\";\n\n// let getYear = () => {\n// \treturn new Date().getFullYear();\n// }\n\n// Footer component\nconst Footer = props => (\n\n    <div className=\"footer-copyright py-3 text-center text-white\">\n        &copy; 2019 Robert Morris\n    </div>\n);\n\nexport default Footer;","import React from \"react\";\nimport \"./Instructions.css\";\n\nconst Instructions = props => (\n<div className=\"jumbotron jumbotron-fluid bg-cover text-white text-center\">\n    <h2 className=\"display-4 font-weight-bold\">Clicky Game!</h2>\n    <p className=\"lead font-weight-bold\">Click on an image to earn points, but don't click the same image twice!</p>\n  </div>);\nexport default Instructions;","import React from \"react\";\nimport \"./ScoreBoard.css\";\n\n// Footer component\nconst ScoreBoard = props => (\n    <div className=\"stickyScoreBoard animated hoverable\">\n\t\t<h5 className=\"text-white bold text-center\">Score<p></p>{props.score}\n\t\t<hr/>Best<p></p>{props.topScore}</h5></div>\n);\n\nexport default ScoreBoard;","import React, { Component } from \"react\";\nimport { Shake } from \"reshake\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport characters from \"./characters.json\";\nimport Instructions from \"./components/Instructions\";\nimport ScoreBoard from \"./components/ScoreBoard\";\n\n\nclass App extends Component {\n\n\t// Set our state variables\n\tstate = {\n\t\tguessArray: [],\n\t\tmessage: \"Click image to begin!\",\n\t\tscore: 0,\n\t\ttopScore: 0,\n\t\tshake: 0\n\t};\n\t// Card is clicked\n\tclickCard = card => {\n\t\tlet guessArray = this.state.guessArray;\n\t\tlet score = this.state.score;\n\t\t// If we already clicked this card...\n\t\tif (guessArray[card.id]) {\n\t\t\tthis.setState({\n\t\t\t\tmessage: \"Game Over!\",\n\t\t\t\ttopScore: Math.max(this.state.score, this.state.topScore),\n\t\t\t\tguessArray: [],\n\t\t\t\tscore: 0,\n\t\t\t\tshake: 0.55      // Shake screen for 0.75 seconds\n\t\t\t})\n\t\t\t// Otherwise it was a good guess!\n\t\t}\n\t\telse {\n\t\t\tguessArray[card.id] = true;\n\t\t\tthis.setState({\n\t\t\t\tmessage: \"Good Job!\",\n\t\t\t\tguessArray: guessArray,\n\t\t\t\tscore: ++score,\n\t\t\t\tshake: 0\n\t\t\t}, () => {\n\t\t\t\tif (this.state.score === 12) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmessage: \"You Won!\",\n\t\t\t\t\t\ttopScore: Math.max(this.state.score, this.state.topScore),\n\t\t\t\t\t\tguessArray: [],\n\t\t\t\t\t\tscore: 0,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\t// Render the page\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar message={this.state.message} />\n\t\t\t\t<Instructions />\n\t\t\t\t<ScoreBoard\n\t\t\t\t\tscore={this.state.score}\n\t\t\t\t\ttopScore={this.state.topScore} />\n\t\t\t\t{/* Use \"reshake\" to shake the page on a wrong answer */}\n\t\t\t\t<Shake h={25} v={10} r={5} q={this.state.shake} dur={650} int={2.6} max={40} fixed={true} fixedStop={false} freez={false}>\n\t\t\t\t\t<Wrapper>\n\t\t\t\t\t\t{characters\n\t\t\t\t\t\t\t.sort((a, b) => 0.5 - Math.random())\n\t\t\t\t\t\t\t.map(randomCard => (\n\t\t\t\t\t\t\t\t<CharacterCard\n\t\t\t\t\t\t\t\t\tclickCard={this.clickCard}\n\t\t\t\t\t\t\t\t\tid={randomCard.id}\n\t\t\t\t\t\t\t\t\tkey={randomCard.id}\n\t\t\t\t\t\t\t\t\timage={randomCard.image} />))}\n\t\t\t\t\t</Wrapper>\n\t\t\t\t</Shake>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}